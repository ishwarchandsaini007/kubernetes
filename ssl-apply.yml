apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdMRENDQlJTZ0F3SUJBZ0lTQTcrUUNxWGxjemZhTGVXNzJxRXNOYzRITUEwR0NTcUdTSWIzRFFFQkN3VUEKTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRApFd0pTTXpBZUZ3MHlNekF6TWpBeE1qTTFNVEJhRncweU16QTJNVGd4TWpNMU1EbGFNQjR4SERBYUJnTlZCQU1UCkUydDFZbVV1YkdsdWRYaG9kVzUwWlhJdWFXNHdnZ0lpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUsKQW9JQ0FRRGpxeWJJQitrYUpZMS9GWVZnNWhRZUNrY0syMHFwVndNdDVUb29aOEYyZUtuandzMitCRHBPTzJtUwpWTlpUK0pWck85SEtJbURrbkl0SDNqTWl5YldtbUttTGt0OHJRVzF0MTdJSElYNThYb0w1aTlBUlU3aWNPZW91Ckx6bVhzMk8zZ0E5N3ZWRENzYitDQ1U0QTEvOE1GUWorMUJ5UEVRNXArS1ZjU0RhVFl4YWsydDU4cEt3cnFsUjEKUy91K2h5elZoSzRqY2JNdUp4OEd6YzlPUUNKUytRbVZqcWRsYnR6b21LaVJpbUh6SFlweWsvMXc0Y0tRcUlXdwpzWWlBUGc2Y1pMb0JleXU4d1I5MWloby9ycG9ZTkx4cVdhSlBCUTBURzF6NkNWeUFjc1VUMzg2aVMyRmI5U2hECllvbERSeFozUDNtSnNpQ0NRYjRwd3ZyeWdlWStVUUQ1aHZ0eVB6T0kxOStqWVhFNFNmVFdnVkJnaWRuMVNPVEkKWU9pTDhKRVFDTk1lRGRnTWdnT0Rma3B2RzcyZmtmUHhRWURHVVJ6eEUwS2pvSUoyQnlEQVJhZGk5RWRibXB5MQpHVjhvQjdtZ3dPdWl3RmJabVBNMXVmblpDMkFkeWlpSjZYQUdJdis1aFVPSnF0U3F3c2JlcHMzMDhoc1Ewa3BuCkNkMitIZnRCd1dTdjdMYkk4YXFPbmR1azlqMkZVZzdZMVdNZ0ppQzdUcXJBQUp2TkNZMDRnSjBzSCtYa2IwT2UKN3Q3MmdvL2dXVURVT1pmMDJRem81UFZMZFlDZXJRdkpHYlNDWnJhQlIxZEpORnhEWUVJQlE3dFJmWUpOWE5XMgprWFJkKzdpbjRhVDNxZFBMWkFaZXlaMmlHV1I1ZHFwckJwdEhiV3ExNzgrcXE0MUNYUUlEQVFBQm80SUNUakNDCkFrb3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0QKQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlEvcmNSWFJEbU1ZcnJtVElTcnMvbHJjbkdzbGpBZgpCZ05WSFNNRUdEQVdnQlFVTHJNWHQxaFd5NjVRQ1VEbUg2K2RpeFRDeGpCVkJnZ3JCZ0VGQlFjQkFRUkpNRWN3CklRWUlLd1lCQlFVSE1BR0dGV2gwZEhBNkx5OXlNeTV2TG14bGJtTnlMbTl5WnpBaUJnZ3JCZ0VGQlFjd0FvWVcKYUhSMGNEb3ZMM0l6TG1rdWJHVnVZM0l1YjNKbkx6QWVCZ05WSFJFRUZ6QVZnaE5yZFdKbExteHBiblY0YUhWdQpkR1Z5TG1sdU1Fd0dBMVVkSUFSRk1FTXdDQVlHWjRFTUFRSUJNRGNHQ3lzR0FRUUJndDhUQVFFQk1DZ3dKZ1lJCkt3WUJCUVVIQWdFV0dtaDBkSEE2THk5amNITXViR1YwYzJWdVkzSjVjSFF1YjNKbk1JSUJCQVlLS3dZQkJBSFcKZVFJRUFnU0I5UVNCOGdEd0FIY0F0ejc3Sk4rY1RicDE4am5GdWxqMGJGMzhRczk2bnpYRW5oMEpnU1h0dEprQQpBQUdHL3pzaUF3QUFCQU1BU0RCR0FpRUFpN0VXclpZbDVCN1lMQzlMcW9JNFRZT25CaXRGVzFxcXhJSXQwS3ZDCitOb0NJUUNGS24yNVVGUThIbFRSTHF1aHhHYTFXay9CbS9kdzdDQnhvSFVONitiQTJnQjFBT2crME5vKzlRWTEKTXVkWEtMeUphOGtEMDh2UkVXdnM2Mm5oZDMxdEJyMXVBQUFCaHY4N0loUUFBQVFEQUVZd1JBSWdKYWdHRGdXWApUb0VwQkhLaUpEeWFpM0lPcC9DVDlLRi9BcjVzL1VRRER5VUNJSEJ3ZlZGd1RTeUE0UkdyYkd1SWtVUWxnWmNTCkdGYUJjeG5qWUlWdmtkZzFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNZTTNaUy8xcFZWRm1jMVlYUEsvQ3IKNmlTdVZPMHd6U0gxUmN1Z2JUbUo2cUVUQmpIbmFVYk5PUTNCODBRWG84bXNBbkRmRVVtQlM0TnhRdzErb1BZTApWTlFSMm1KME83Z3ZxVGhKREhyTWJxSTR0U0wzM3d6ekR3VUF1dHlSZkNFYlRSdnQ5ZmV0aitqWEhjUDRMRUtmCm5tMzB0MWhqRGZEOVNYdTZod3BpQVphTjAvTXNQRXJDVmZvdmJNRTdoa2tpVDhZQjRkUjVycFNYK0kwSnFvT1IKYjNuMFp1aXZnSG9kT3Ztc0Z6VFhPbmpZLzFucnU3eDZ2VDAxZzVCZGNtQkM3YUNhTFEwcnFxand6a1hlRUlUbgptQk5vVVVhZzlvV2paSUZNN29qcnYxcldCcVZIbVZCU0tpbkJ6OU0xbWRwaURab0s1bVJ2V0hmTHlmQXFRcWhpCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZGakNDQXY2Z0F3SUJBZ0lSQUpFckNFclBEQmluVS9iV0xpV25YMW93RFFZSktvWklodmNOQVFFTEJRQXcKVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaApjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd0hoY05NakF3T1RBME1EQXdNREF3CldoY05NalV3T1RFMU1UWXdNREF3V2pBeU1Rc3dDUVlEVlFRR0V3SlZVekVXTUJRR0ExVUVDaE1OVEdWMEozTWcKUlc1amNubHdkREVMTUFrR0ExVUVBeE1DVWpNd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFSwpBb0lCQVFDN0FoVW96UGFnbE5NUEV1eU5WWkxEK0lMeG1hWjZRb2luWFNhcXRTdTV4VXl4cjQ1citYWElvOWNQClI1UVVWVFZYako2b29qa1o5WUk4UXFsT2J2VTd3eTdiamNDd1hQTlpPT2Z0ejJud1dnc2J2c0NVSkNXSCtqZHgKc3hQbkhLemhtKy9iNUR0RlVrV1dxY0ZUempUSVV1NjFydTJQM21CdzRxVlVxN1p0RHBlbFFEUnJLOU84WnV0bQpOSHo2YTR1UFZ5bVorREFYWGJweWIvdUJ4YTNTaGxnOUY4Zm5DYnZ4Sy9lRzNNSGFjVjNVUnVQTXJTWEJpTHhnClozVm1zL0VZOTZKYzVsUC9Pb2kyUjZYL0V4anFtQWwzUDUxVCtjOEI1ZldtY0JjVXIyT2svNW16azUzY1U2Y0cKL2tpRkhhRnByaVYxdXhQTVVnUDE3VkdoaTlzVkFnTUJBQUdqZ2dFSU1JSUJCREFPQmdOVkhROEJBZjhFQkFNQwpBWVl3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdJR0NDc0dBUVVGQndNQk1CSUdBMVVkRXdFQi93UUlNQVlCCkFmOENBUUF3SFFZRFZSME9CQllFRkJRdXN4ZTNXRmJMcmxBSlFPWWZyNTJMRk1MR01COEdBMVVkSXdRWU1CYUEKRkhtMFdlWjd0dVhrQVhPQUNJaklHbGoyNlp0dU1ESUdDQ3NHQVFVRkJ3RUJCQ1l3SkRBaUJnZ3JCZ0VGQlFjdwpBb1lXYUhSMGNEb3ZMM2d4TG1rdWJHVnVZM0l1YjNKbkx6QW5CZ05WSFI4RUlEQWVNQnlnR3FBWWhoWm9kSFJ3Ck9pOHZlREV1WXk1c1pXNWpjaTV2Y21jdk1DSUdBMVVkSUFRYk1Ca3dDQVlHWjRFTUFRSUJNQTBHQ3lzR0FRUUIKZ3Q4VEFRRUJNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUNGeWs1SFBxUDNoVVNGdk5WbmVMS1lZNjExVFI2VwpQVE5sY2xRdGdhRHF3KzM0SUw5ZnpMZHdBTGR1Ty9aZWxON2tJSittNzR1eUErZWl0Ulk4a2M2MDdUa0M1M3dsCmlrZm1aVzQvUnZUWjhNNlVLKzVVemhLOGpDZEx1TUdZTDZLdnpYR1JTZ2kzeUxnamV3UXRDUGtJVno2RDJRUXoKQ2tjaGVBbUNKOE1xeUp1NXpsenlaTWpBdm5uQVQ0NXRSQXhla3JzdTk0c1E0ZWdkUkNuYldTRHRZN2toK0JJbQpsSk5Yb0IxbEJNRUtJcTRRRFVPWG9SZ2ZmdURnaGplMVdyRzlNTCtIYmlzcS95Rk9Hd1hEOVJpWDhGNnN3Nlc0CmF2QXV2RHN6dWU1TDNzejg1SytFQzRZL3dGVkROdlpvNFRZWGFvNlowZitsUUtjMHQ4RFFZemsxT1hWdThycDIKeUpNQzZhbExiQmZPREFMWnZZSDduN2RvMUFabHM0STlkMVA0am5rRHJRb3hCM1VxUTloVmwzTEVLUTczeEYxTwp5SzVHaEREWDhvVmZHS0Y1dStkZWNJc0g0WWFUdzdtUDNHRnhKU3F2MyswbFVGSm9pNUxjNWRhMTQ5cDkwSWRzCmhDRXhyb0wxKzdtcnlJa1hQZUZNNVRnTzlyMHJ2WmFCRk92VjJ6MGdwMzVaMCtMNFdQbGJ1RWpOL2x4UEZpbisKSGxVanI4Z1JzSTNxZkpPUUZ5LzlyS0lKUjBZLzhPbXd0LzhvVFdneTFtZGVIbW1qazdqMW5Zc3ZDOUpTUTZadgpNbGRsVFRLQjN6aFRoVjErWFdZcDZyamQ1SlcxemJWV0VrTE54RTdHSlRoRVVHM3N6Z0JWR1A3cFNXVFVUc3FYCm5MUmJ3SE9vcTdoSHdnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRllEQ0NCRWlnQXdJQkFnSVFRQUYzSVRmVTZVSzQ3bmFxUEdRS3R6QU5CZ2txaGtpRzl3MEJBUXNGQURBLwpNU1F3SWdZRFZRUUtFeHRFYVdkcGRHRnNJRk5wWjI1aGRIVnlaU0JVY25WemRDQkRieTR4RnpBVkJnTlZCQU1UCkRrUlRWQ0JTYjI5MElFTkJJRmd6TUI0WERUSXhNREV5TURFNU1UUXdNMW9YRFRJME1Ea3pNREU0TVRRd00xb3cKVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaApjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd2dnSWlNQTBHQ1NxR1NJYjNEUUVCCkFRVUFBNElDRHdBd2dnSUtBb0lDQVFDdDZDUno5QlEzODV1ZUsxY29ISWUrM0xmZk9KQ01ianptVjZCNDkzWEMKb3Y3MWFtNzJBRThvMjk1b2hteEVrN2F4WS8wVUVtdS9IOUxxTVpzaGZ0RXpQTHBJOWQxNTM3TzQveEx4SVpwTAp3WXFHY1dsS1ptWnNqMzQ4Y0wrdEtTSUc4K1RBNW9DdTRrdVB0NWwrbEFPZjAwZVhmSmxJSTFQb09LNVBDbStECkx0RkpWNHlBZExiYUw5QTRqWHNEY0NFYmRmSXdQUHFQcnQzYVk2dnJGay9DamhGTGZzOEw2UCsxZHk3MHNudEsKNEV3U0pReHdqUU1wb09GVEpPd1QyZTRadnhDelNvdy9pYU5oVWQ2c2h3ZVU5R054N0M3aWIxdVlnZUdKWERSNQpiSGJ2TzVCaWVlYmJwSm92SnNYUUVPRU8zdGtRamhiN3QvZW85OGZsQWdlWWp6WUlsZWZpTjVZTk5uV2UrdzV5CnNSMmJ2QVA1U1FYWWdkMEZ0Q3JXUWVtc0FYYVZDZy9ZMzlXOUVoODFMeWdYYk5LWXdhZ0paSGR1UnplNnpxeFoKWG1pZGYzTFdpY1VHUVNrK1dUN2RKdlVreVJHbldxTk1RQjlHb1ptMXB6cFJib1k3bm4xeXB4SUZlRm50UGxGNApGUXNEajQzUUx3V3lQbnRLSEV0ekJSTDh4dXJnVUJOOFE1TjBzOHAwNTQ0ZkFRalFNTlJiY1RhMEI3ckJNREJjClNMZUNPNWltZldDS29xTXBnc3k2dllNRUc2S0RBMEdoMWdYeEc4SzI4S2g4aGp0R3FFZ3FpTngybW5hL0gycWwKUFJtUDZ6anpaTjdJS3cwS0tQLzMyK0lWUXRRaTBDZGQ0WG4rR09kd2lLMU81dG1MT3NiZEoxRnUvN3hrOVRORApUd0lEQVFBQm80SUJSakNDQVVJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT0JnTlZIUThCQWY4RUJBTUNBUVl3ClN3WUlLd1lCQlFVSEFRRUVQekE5TURzR0NDc0dBUVVGQnpBQ2hpOW9kSFJ3T2k4dllYQndjeTVwWkdWdWRISjEKYzNRdVkyOXRMM0p2YjNSekwyUnpkSEp2YjNSallYZ3pMbkEzWXpBZkJnTlZIU01FR0RBV2dCVEVwN0drZXl4eAordHZoUzVCMS84UVZZSVdKRURCVUJnTlZIU0FFVFRCTE1BZ0dCbWVCREFFQ0FUQS9CZ3NyQmdFRUFZTGZFd0VCCkFUQXdNQzRHQ0NzR0FRVUZCd0lCRmlKb2RIUndPaTh2WTNCekxuSnZiM1F0ZURFdWJHVjBjMlZ1WTNKNWNIUXUKYjNKbk1Ed0dBMVVkSHdRMU1ETXdNYUF2b0MyR0syaDBkSEE2THk5amNtd3VhV1JsYm5SeWRYTjBMbU52YlM5RQpVMVJTVDA5VVEwRllNME5TVEM1amNtd3dIUVlEVlIwT0JCWUVGSG0wV2VaN3R1WGtBWE9BQ0lqSUdsajI2WnR1Ck1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtjd0JzbG03L0RsTFFydDJNNTFvR3JTK280NCsveVFvREZWREMKNVd4Q3UyK2I5TFJQd2tTSUNIWE02d2ViRkdKdWVON3NKN281WFBXaW9XNVdsSEFRVTdHNzVLL1Fvc01yQWRTVwo5TVVnTlRQNTJHRTI0SEdOdExpMXFvSkZsY0R5cVNNbzU5YWh5MmNJMnFCRExLb2JreC9KM3ZXcmFWMFQ5VnVHCldDTEtUVlhrY0dkdHdsZkZSamxCejRwWWcxaHRtZjVYNkRZTzhBNGpxdjJJbDlEalhBNlVTYlcxRnpYU0xyOU8KaGU4WTRJV1M2d1k3YkNrakNXRGNSUUpNRWhnNzZmc08zdHhFK0ZpWXJ1cTlSVVdoaUYxbXl2NFE2VytDeUJGQwpEZnZwN09PR0FONmRFT000K3FSOXNkam9TWUtFQnBzcjZHdFBBUXc0ZHk3NTNlYzUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=  

  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpSUUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1M4d2dna3JBZ0VBQW9JQ0FRRGpxeWJJQitrYUpZMS8KRllWZzVoUWVDa2NLMjBxcFZ3TXQ1VG9vWjhGMmVLbmp3czIrQkRwT08ybVNWTlpUK0pWck85SEtJbURrbkl0SAozak1peWJXbW1LbUxrdDhyUVcxdDE3SUhJWDU4WG9MNWk5QVJVN2ljT2VvdUx6bVhzMk8zZ0E5N3ZWRENzYitDCkNVNEExLzhNRlFqKzFCeVBFUTVwK0tWY1NEYVRZeGFrMnQ1OHBLd3JxbFIxUy91K2h5elZoSzRqY2JNdUp4OEcKemM5T1FDSlMrUW1WanFkbGJ0em9tS2lSaW1IekhZcHlrLzF3NGNLUXFJV3dzWWlBUGc2Y1pMb0JleXU4d1I5MQppaG8vcnBvWU5MeHFXYUpQQlEwVEcxejZDVnlBY3NVVDM4NmlTMkZiOVNoRFlvbERSeFozUDNtSnNpQ0NRYjRwCnd2cnlnZVkrVVFENWh2dHlQek9JMTkrallYRTRTZlRXZ1ZCZ2lkbjFTT1RJWU9pTDhKRVFDTk1lRGRnTWdnT0QKZmtwdkc3MmZrZlB4UVlER1VSenhFMEtqb0lKMkJ5REFSYWRpOUVkYm1weTFHVjhvQjdtZ3dPdWl3RmJabVBNMQp1Zm5aQzJBZHlpaUo2WEFHSXYrNWhVT0pxdFNxd3NiZXBzMzA4aHNRMGtwbkNkMitIZnRCd1dTdjdMYkk4YXFPCm5kdWs5ajJGVWc3WTFXTWdKaUM3VHFyQUFKdk5DWTA0Z0owc0grWGtiME9lN3Q3MmdvL2dXVURVT1pmMDJRem8KNVBWTGRZQ2VyUXZKR2JTQ1pyYUJSMWRKTkZ4RFlFSUJRN3RSZllKTlhOVzJrWFJkKzdpbjRhVDNxZFBMWkFaZQp5WjJpR1dSNWRxcHJCcHRIYldxMTc4K3FxNDFDWFFJREFRQUJBb0lDQVFESTBMdXBid2pXYms5THpHRFVvcjBWCjdqelJ2N0l3Z2pha3NlL0ZtaGRVZDRSckNQWlBhQTFCMmpmNXdlazNNaW9oNXliYUk4N1JkNStIS2VCekMvYTEKVnkwZGx0UlFwQ3B3Mi9RRlJDNzhacVVpbG9kVjhVSUNVemRUdTRZU1lFSlJwcHlCcWZCbGUwR1A0c015RFZQRApoWDVrd0JYY3Y4KzErNE5vVGE0Ti9UWUkvYUdIMGZ5bm0xdGFCMGFydlRIM3VFdWRxZm5CZVBKdUh2Vi9jU1NWCmlXTkJ6dzJxYzhwWlErWlVVZnFwNWVHcnhRdWxHUTEwYWFGYXhJM0JpSHQ4eVlBa05FL1U4NGZiTnBDR29XejgKY3UvSzR2cyt0aGJkUnFLUlRkYVEyaXNwcDV6dEhJNW8vV3FoWFhYenFPMlJDNlVacHN2eitTZFNVTkRuUFZzbQo3SHQzN2gwa1pXazVLcVNCV2NlNEU4aTVIdXpBamRtZVdRQnhvbkxVVStWc09YRUtjUk9idXI4VGlucDJIWWh1CnhvV0ZrTUFjOTFSM2g0Q1VHdmhJc05UTnJjNjNrOUt6d29vNnB3dW5YQW0zSStlbkxxZEx3U05XWUNrcU9YVE0KMkFwa2E3ZEkxNWJQd0hEdDR6aEtXVnAwMEdQNmdPbXVKR09qSENtdnB4UTNXd0N4bk9hTktMa3FtbXJOVkJVQwpGMm1PM1Q4TDc4cTg4ZEZnL3VUL1FEUm0zRWV2RWo3OWJvRXFwaWg3UVBxWE1HMjI1eVE5SDRKUFozWmlVMUpsCkh6djNNa253YkZqaDJwbGRzTVZ5c25vd1FsMGNVSm5BMFlwSlNhWURuTUtTaFBuNi9qcS9CQ25hU0dKYkJacjUKdkFaZk43d05qcjRTcTFXamcyeGlaUUtDQVFFQTlWRFdNSHpkb1RzbkVXZGl3RXVKTEkyWk0xNURMR043cENxKworbVFqSmtWY3liamhCN05saTlacTFwbUZ0aVBUVW5nNlJqbmNoZy9TbHNFRWtwRWE2QW0wQUkxTXgrR1BQaFhNCnNza1BocE0vazdPclRWTzdUR3pyWlhuRDNWNmovRHpnWFB5dVl4QS9ISXgrQkJwV1UvWVpEWnJPdGMxbjhwbmoKUDY5OWUvSHhiVm1qenlqam9KT0M4YTd6aHNkWjZxOFNyU2ptQklROGJlalcxTTA2WTlnYzBWTkN3TFhUWnVWSAp3TzNENWpFMVFjUllqc0xxTkpDSjdaSDlINXlFeDVBcHhBeHJEMXQyYlorMmM3MkcvZDREMmFEcHhvWklESHBMCm9vU1JrWmd5K1V4WS9wakF5ZC9YejZEZUpmcEI1dHdvZGRXY2JITElLenFCeVgrU1d3S0NBUUVBN1pXT1liZE4KcGI1Mmk3RDZQdCtYQkZvYTJQOXFkN0UwbUhPbG1GelpxNU43VDNKdi92QVBVWDlxdm9aSTA4amFvYzNkRlZxRwpKMXBwTEhPS1VuUnhJWGRKVmk1VkI1SzhoaUR1WkMwRGh5VlVTWEFvNmlJUlNsaG5jZ2xGdnFETjJZYlUzUlVFClhaTXVnZUkram5zWjV3OVBrZWdzd1R6MnY4bVFsYTFMWlRQRzZ6M2x2RFNqZEZiMDZXa1dDZStpYlhKNm0zZVAKdDcrdWM0RVQ5bmxqc2ZReE43ZE1sYUNkVnUvVWtVRjhNRlVEYlhMcFc3Szdpbzh0NTFnallDcWNPSWZkaVY0eApqbzVQZ2h4bWxnb0U5SG1aRFh6WUNwRjJ6RStwSlVjaDR0eG9HaS9pNWZhRFpTYURFY3JVKzY3WUxoazlCbU5rCnFGSGUwZDhPQ0ZhcnB3S0NBUUVBaVJBK2JGOEgwZExrRkRSSWw1cGNyVmo4TlJoQXZlZGpxS2o5aFpjM2tHV0cKMzJwOXlMaXlUdnhoTzBBUjFsK1Q3ZXNnM0NYdUViVjdleUdqTldUL3ZJL1hVOHVmRDdyMk5zRWxXdXM5MG5vcApOcFJYYk9BUXNUWFdIQjk1a1JFVTNKVUM0dEdIZWZBVTR4V1lQeUNjQlZObVVoU2gxREJOR041a2V5dkpGOXhwCmdTaHBmeENnaGhLRlFoWDNHT0gvV2tHeFZMQ2FQQUhLWmJxSGRlU284Q3BLaDZaV2tLZkcweUhlQW15V1hPSTMKbUdSaytuYnJOcTFmY3k1eldCc3lrUEg2ZEFCZ1BQZGtad0dxaG1acHF5UkYwRzI0MEdRc2sxUXRPRU9MdGVacwo3Sjk4eGR1Qk5BbnVZYUxISEQ4RVhVRzdGWU5oWDdLT0pxRU03UkZyS3dLQ0FRRUFwTGJYSzYvbHlVOHU2TklkCjdKRWZKZ2xDSzhlSWpNcnlaKzlsa3loc1VLUEREZVdNOS9aKzZFV3FQOFRob05MVG9QSVVvTVZOMU9LOW4rL0sKcWpmSVp5ZElWTk55Wi9tM2NsWktjSEUwelBGNGFpRzBlLzU2ZGt5c0MwZWFidnNWUEFaYWRad29scWQveXRTTQpBa1FlUlM4OFB5LzBOMVNJelpaMUF4Qk9BUy9RYlM5UW94YnJhN0VOd3ZUMExwZFF5UWhoTUgvSHgrREFsWnViCnQzbVpRTHJIbEpVa0oyaGZMUExCTUtOeDhpQStiQmNLNm1RVDJaQkNodTE0T1NmUmZ1L1RDM1dlYmZNRDlIUzAKT3JsZmpnN3ZxWVl3VWNOZjFXNDFHbjhpWXlIam1xUXdiclpsaWk4VkY3VER6R24vdnBZSTFQRDd6Q1pXa0xKUQpERC9xYVFLQ0FRRUFyNnk0OERBTDVVUHNxN2tOekJNS2Z6TDVPVTFUZm10MWdiL3JrbXQrbW9DSzhIRUVNRFBjCmQvVWhiUTdQSnBVRkhoKzMyam9qZVpaRmhnRFpWZWZacU1KS0pCcWF5d00wL0pSNWZuaWY2ei9xdHF5ZHBodXEKcktPalZmRCt2Z1dmeG8veEcxbTZhcGRWNVRYdC9nKzZYaWVvU1hjSDFYcm92SnJiWnJBc255d1dmNDVXRFdrQgpncFBLbFlzN3JWOTB0Z0s1SUMvTDNiTVVDbE8rZExEaUNHWFVuZjR2dkRERmJ2MXJMYnZIemk3b2RZRFlNcEtOCm50RXBEazNQdEdReEYyUlIwUEIrcU91T2ovN2o3MTBaRDk0OU1pSHpmemJYSk4xb2tmekVWNk9nQVZxS2FyejEKUDU1ZzB6U0t0M2Q5anhNUE4vNU1VblIzb2svNWV5azBodz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  name: linuxhunter-tls
type: kubernetes.io/tls
